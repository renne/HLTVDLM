<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>HLTVDLM: HomeLoadTV Class Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">HLTVDLM
   
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="classes.xhtml"><span>Data&#160;Structure&#160;Index</span></a></li>
      <li><a href="functions.xhtml"><span>Data&#160;Fields</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('a00002.xhtml','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="#pri-static-attribs">Static Private Attributes</a>  </div>
  <div class="headertitle">
<div class="title">HomeLoadTV Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<!-- doxytag: class="HomeLoadTV" --><div class="dynheader">
Collaboration diagram for HomeLoadTV:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00008.svg" width="178" height="507"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00002.xhtml#aaaa2656ddeca0b10e9cfbdcf33af6171">__construct</a> ($email, $password)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00002.xhtml#a569e9d37b9020f55f88a977f13659d8c">__destruct</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00002.xhtml#a568d46c9f41fd833874aacacf2d26e57">getLinks</a> ($limit=100, $active2new=true, $happyHour=true)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00002.xhtml#a5989cc319d99120c3fc57e59f42ccb11">setProcessing</a> ($list)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00002.xhtml#a036df968051a20fee7f3f633f2ff1c97">setState</a> ($id, $state, $filesize=0, $speed=0, $error= '', $filename= '')</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00002.xhtml#a4a60bef4826abc03f27cd8828f99b708">download</a> ($directory, $happyHour=true, $limit=100, $emailFrom=&quot;&quot;)</td></tr>
<tr><td colspan="2"><h2><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00002.xhtml#a10dba20b2453981b6d291ca56afa78e4">$fd</a> = null</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00002.xhtml#aaed49f90856573061428048f59ea93ee">$email</a> = null</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00002.xhtml#a11451731ed84eaacc1d646da720d7902">$password</a> = null</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00002.xhtml#ac183db7065132da7dcc0e258e89d55fe">$curl</a> = null</td></tr>
<tr><td colspan="2"><h2><a name="pri-static-attribs"></a>
Static Private Attributes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00002.xhtml#a8cc25db413d0b3b45bb791123b9b799a">$lockfile</a> = 'HomeLoadTV.lock'</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00002.xhtml#af91e7d6d3eca7da321784ba44bf0a713">$APIuriPrefix</a> = 'http://www.homeloadtv.com/api/?'</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00002.xhtml#afc7be5f78e1d06a5c49d235e57ef4854">$ThumbUriPrefix</a> = 'http://thumbs.onlinetvrecorder.com/'</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00002.xhtml#a3a6a52ac9557e8c118c8179e6a5da82c">$ThumbUriSuffix</a> = '____A.jpg'</td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock">
<p>Definition at line <a class="el" href="a00005_source.xhtml#l00029">29</a> of file <a class="el" href="a00005_source.xhtml">HomeLoadTV.php</a>.</p>
</div><hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="aaaa2656ddeca0b10e9cfbdcf33af6171"></a><!-- doxytag: member="HomeLoadTV::__construct" ref="aaaa2656ddeca0b10e9cfbdcf33af6171" args="($email, $password)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00002.xhtml#aaaa2656ddeca0b10e9cfbdcf33af6171">HomeLoadTV::__construct</a> </td>
          <td>(</td>
          <td class="paramtype">$&#160;</td>
          <td class="paramname"><em>email</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">$&#160;</td>
          <td class="paramname"><em>password</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Constructor.</p>
<p>The constructor creates a lockfile and assigns the object variables.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramtype">string</td><td class="paramname">$email</td><td>User email address. </td></tr>
    <tr><td class="paramtype">string</td><td class="paramname">$password</td><td>User password. </td></tr>
  </table>
  </dd>
</dl>
<dl class="pre"><dt><b>Precondition:</b></dt><dd>None. </dd></dl>
<dl class="post"><dt><b>Postcondition:</b></dt><dd>None. </dd></dl>
<dl class="exception"><dt><b>Exceptions:</b></dt><dd>
  <table class="exception">
    <tr><td class="paramname">Exception</td><td>Wrong parameter type or value. </td></tr>
  </table>
  </dd>
</dl>
<dl class="todo"><dt><b><a class="el" href="a00007.xhtml#_todo000003">Todo:</a></b></dt><dd>Check email string with regular expression. </dd></dl>

<p>Definition at line <a class="el" href="a00005_source.xhtml#l00091">91</a> of file <a class="el" href="a00005_source.xhtml">HomeLoadTV.php</a>.</p>

<p>References <a class="el" href="a00005_source.xhtml#l00047">$email</a>, and <a class="el" href="a00005_source.xhtml#l00053">$password</a>.</p>
<div class="fragment"><pre class="fragment">                                                   {

        <span class="comment">// Open lockfile</span>
        $this-&gt;fd = fopen(sys_get_temp_dir() . <span class="charliteral">&#39;/&#39;</span> . self::$lockfile, <span class="charliteral">&#39;w&#39;</span>);
        <span class="keywordflow">if</span> (FALSE === $this-&gt;fd) {
            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Cannot open lockfile &#39;</span> . sys_get_temp_dir() . <span class="charliteral">&#39;/&#39;</span> . self::$lockfile . <span class="charliteral">&#39;!&#39;</span>);
        }

        <span class="comment">// Set lock on lockfile and Check if program is running</span>
        <span class="keywordflow">if</span> (!flock($this-&gt;fd, LOCK_EX | LOCK_NB)) {
            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: !!! Cannot set lock on lockfile &#39;</span> . sys_get_temp_dir() . <span class="charliteral">&#39;/&#39;</span> . self::$lockfile . <span class="stringliteral">&#39;!!!&#39;</span>);
        }

        <span class="comment">// Check parameters</span>
        <span class="keywordflow">if</span> (!is_string(<a class="code" href="a00002.xhtml#aaed49f90856573061428048f59ea93ee">$email</a>))
            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $email must be string type!&#39;</span>);
        <span class="keywordflow">if</span> (!is_string(<a class="code" href="a00002.xhtml#a11451731ed84eaacc1d646da720d7902">$password</a>))
            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $password must be string type!&#39;</span>);
        <span class="keywordflow">if</span> (empty(<a class="code" href="a00002.xhtml#aaed49f90856573061428048f59ea93ee">$email</a>))
            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $email must not be empty!&#39;</span>);
        <span class="keywordflow">if</span> (empty(<a class="code" href="a00002.xhtml#a11451731ed84eaacc1d646da720d7902">$password</a>))
            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $password must not be empty!&#39;</span>);

        <span class="comment">// Assign object variables</span>
        $this-&gt;email = <a class="code" href="a00002.xhtml#aaed49f90856573061428048f59ea93ee">$email</a>;
        $this-&gt;password = <a class="code" href="a00002.xhtml#a11451731ed84eaacc1d646da720d7902">$password</a>;
    }
</pre></div>
</div>
</div>
<a class="anchor" id="a569e9d37b9020f55f88a977f13659d8c"></a><!-- doxytag: member="HomeLoadTV::__destruct" ref="a569e9d37b9020f55f88a977f13659d8c" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00002.xhtml#a569e9d37b9020f55f88a977f13659d8c">HomeLoadTV::__destruct</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Destructor deletes cURL object and closes file-descriptor.</p>
<p>The destructor deletes the cURL-object and closes the file-descriptor of the lockfile. The operating system unsets the lock on the file when the file-descriptor is closed. </p>
<dl class="pre"><dt><b>Precondition:</b></dt><dd>None. </dd></dl>
<dl class="post"><dt><b>Postcondition:</b></dt><dd>None. </dd></dl>

<p>Definition at line <a class="el" href="a00005_source.xhtml#l00128">128</a> of file <a class="el" href="a00005_source.xhtml">HomeLoadTV.php</a>.</p>
<div class="fragment"><pre class="fragment">                                 {

        <span class="comment">// Delete curl object</span>
        unset($this-&gt;curl);

        <span class="comment">// Close file descriptor of lock file</span>
        @fclose($this-&gt;fd);
    }
</pre></div>
</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="a4a60bef4826abc03f27cd8828f99b708"></a><!-- doxytag: member="HomeLoadTV::download" ref="a4a60bef4826abc03f27cd8828f99b708" args="($directory, $happyHour=true, $limit=100, $emailFrom=&quot;&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00002.xhtml#a4a60bef4826abc03f27cd8828f99b708">HomeLoadTV::download</a> </td>
          <td>(</td>
          <td class="paramtype">$&#160;</td>
          <td class="paramname"><em>directory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">$&#160;</td>
          <td class="paramname"><em>happyHour</em> = <code>true</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">$&#160;</td>
          <td class="paramname"><em>limit</em> = <code>100</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">$&#160;</td>
          <td class="paramname"><em>emailFrom</em> = <code>&quot;&quot;</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Download links at HomeloadTV.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramtype">string</td><td class="paramname">$directory</td><td>Download directory. </td></tr>
    <tr><td class="paramtype">boolean</td><td class="paramname">$happyHour</td><td>Only download in Happy Hour </td></tr>
    <tr><td class="paramtype">string</td><td class="paramname">$limit</td><td>Maximum number download links to get. </td></tr>
    <tr><td class="paramtype">string</td><td class="paramname">$emailFrom</td><td>Sender address of emails with error messages. </td></tr>
  </table>
  </dd>
</dl>
<dl class="pre"><dt><b>Precondition:</b></dt><dd>None. </dd></dl>
<dl class="post"><dt><b>Postcondition:</b></dt><dd>None. </dd></dl>
<dl class="exception"><dt><b>Exceptions:</b></dt><dd>
  <table class="exception">
    <tr><td class="paramname">Exception</td><td></td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="a00005_source.xhtml#l00314">314</a> of file <a class="el" href="a00005_source.xhtml">HomeLoadTV.php</a>.</p>

<p>References <a class="el" href="a00004_source.xhtml#l00019">$directory</a>, <a class="el" href="a00004_source.xhtml#l00022">$emailFrom</a>, <a class="el" href="a00004_source.xhtml#l00021">$limit</a>, <a class="el" href="a00005_source.xhtml#l00161">getLinks()</a>, and <a class="el" href="a00005_source.xhtml#l00263">setState()</a>.</p>
<div class="fragment"><pre class="fragment">                                                                                           {

        <span class="comment">// Check parameters</span>
        <span class="keywordflow">if</span> (!is_string(<a class="code" href="a00004.xhtml#a1b07c630eb02f770a082a013373a16d6">$directory</a>))
            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $directory must be string type!&#39;</span>);
        <span class="keywordflow">if</span> (empty(<a class="code" href="a00004.xhtml#a1b07c630eb02f770a082a013373a16d6">$directory</a>))
            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $directory must not be empty!&#39;</span>);
        <span class="keywordflow">if</span> (!is_writable(<a class="code" href="a00004.xhtml#a1b07c630eb02f770a082a013373a16d6">$directory</a>))
            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $directory must be writable!&#39;</span>);
        <span class="keywordflow">if</span> (!is_bool($happyHour))
            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $happyHour must be boolean type!&#39;</span>);
        <span class="keywordflow">if</span> (!is_integer(<a class="code" href="a00004.xhtml#ae05862a0294251c88629b141b5ce329a">$limit</a>))
            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $limit must be integer type!&#39;</span>);
        <span class="keywordflow">if</span> (<a class="code" href="a00004.xhtml#ae05862a0294251c88629b141b5ce329a">$limit</a> &lt;= 0)
            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $limit must be greater than zero!&#39;</span>);
        <span class="keywordflow">if</span> (!is_string(<a class="code" href="a00004.xhtml#a8812e953c70aa15f8f01e0a83230e645">$emailFrom</a>))
            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $emailFrom must be string type!&#39;</span>);

        <span class="comment">// Get list of links</span>
        $list = $this-&gt;<a class="code" href="a00002.xhtml#a568d46c9f41fd833874aacacf2d26e57">getLinks</a>(<a class="code" href="a00004.xhtml#ae05862a0294251c88629b141b5ce329a">$limit</a>, <span class="keyword">true</span>, $happyHour);

        <span class="comment">// Check for links</span>
        <span class="keywordflow">if</span> (!empty($list[<span class="stringliteral">&#39;links&#39;</span>])) {

            <span class="comment">// Create CURL object</span>
            $this-&gt;curl = <span class="keyword">new</span> <a class="code" href="a00001.xhtml">CURL</a>();
            <span class="keywordflow">if</span> (!is_object($this-&gt;curl)) {
                <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Cannot create cURL object!&#39;</span>);
            }

            <span class="comment">// Loop through links</span>
            <span class="keywordflow">foreach</span> ($list[<span class="stringliteral">&#39;links&#39;</span>] as $link) {

                <span class="comment">// Get filename, name of recording and format if OTR recording</span>
                $rec = array();
                preg_match(<span class="stringliteral">&#39;#.*/\d*_?(?P&lt;filename&gt;(?P&lt;name&gt;.+_TVOON_DE)\.(?P&lt;format&gt;.*))#&#39;</span>, $link[url], $rec);
                $filename = (isset($rec[<span class="stringliteral">&#39;filename&#39;</span>])) ? $rec[<span class="stringliteral">&#39;filename&#39;</span>] : <span class="stringliteral">&#39;&#39;</span>;

                <span class="comment">// Download link</span>
                $video = $this-&gt;curl-&gt;downloadFile($link[url], <a class="code" href="a00004.xhtml#a1b07c630eb02f770a082a013373a16d6">$directory</a>, $filename, 0660);

                <span class="comment">// Handle errors</span>
                $errors = array();
                <span class="keywordflow">if</span> (0 != $video[<span class="stringliteral">&#39;errno&#39;</span>]) {
                    $errors[<span class="stringliteral">&#39;video&#39;</span>] = $video;
                    print_r($video);
                }

                <span class="comment">// Call HomeloadTV-API and set state.</span>
                $state = (0 == $video[<span class="stringliteral">&#39;errno&#39;</span>]) ? <span class="stringliteral">&#39;finished&#39;</span> : <span class="stringliteral">&#39;new&#39;</span>;
                $this-&gt;<a class="code" href="a00002.xhtml#a036df968051a20fee7f3f633f2ff1c97">setState</a>($link[<span class="stringliteral">&#39;id&#39;</span>], $state, intval(filesize($video[<span class="stringliteral">&#39;filepath&#39;</span>]) / 1024), intval($video[<span class="stringliteral">&#39;speed_download&#39;</span>]), $video[<span class="stringliteral">&#39;error&#39;</span>], basename($video[<span class="stringliteral">&#39;filepath&#39;</span>]));

                <span class="comment">// Download thumbnail</span>
                <span class="keywordflow">if</span> ((0 == $video[<span class="stringliteral">&#39;errno&#39;</span>]) &amp;&amp; !empty($filename) &amp;&amp; isset($rec[<span class="stringliteral">&#39;name&#39;</span>])) {
                    $thumb = $this-&gt;curl-&gt;downloadFile(self::$ThumbUriPrefix . $rec[<span class="stringliteral">&#39;name&#39;</span>] . self::$ThumbUriSuffix, <a class="code" href="a00004.xhtml#a1b07c630eb02f770a082a013373a16d6">$directory</a>, $filename . <span class="stringliteral">&#39;.jpg&#39;</span>, 0660);

                    <span class="comment">// Handle errors</span>
                    <span class="keywordflow">if</span> (0 != $thumb[<span class="stringliteral">&#39;errno&#39;</span>]) {
                        $errors[<span class="stringliteral">&#39;thumb&#39;</span>] = $thumb;
                        print_r($thumb);
                    }
                }

                <span class="comment">// Send mail with error messages</span>
                <span class="keywordflow">if</span> (!empty($errors) &amp;&amp; !empty(<a class="code" href="a00004.xhtml#a8812e953c70aa15f8f01e0a83230e645">$emailFrom</a>)) {
                    mail($this-&gt;email, <span class="stringliteral">&#39;HomeLoadTV error message&#39;</span>, implode(<span class="stringliteral">&quot;\n&quot;</span>, $video), <span class="stringliteral">&#39;From: &#39;</span> . <a class="code" href="a00004.xhtml#a8812e953c70aa15f8f01e0a83230e645">$emailFrom</a>);
                }
            }

            <span class="comment">// Destroy CURL object</span>
            unset($this-&gt;curl);
        }
    }
</pre></div>
<p><div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00002_a4a60bef4826abc03f27cd8828f99b708_cgraph.svg" width="376" height="94"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a568d46c9f41fd833874aacacf2d26e57"></a><!-- doxytag: member="HomeLoadTV::getLinks" ref="a568d46c9f41fd833874aacacf2d26e57" args="($limit=100, $active2new=true, $happyHour=true)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00002.xhtml#a568d46c9f41fd833874aacacf2d26e57">HomeLoadTV::getLinks</a> </td>
          <td>(</td>
          <td class="paramtype">$&#160;</td>
          <td class="paramname"><em>limit</em> = <code>100</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">$&#160;</td>
          <td class="paramname"><em>active2new</em> = <code>true</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">$&#160;</td>
          <td class="paramname"><em>happyHour</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Gets an array with download links of <a class="el" href="a00002.xhtml">HomeLoadTV</a>.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramtype">string</td><td class="paramname">$limit</td><td>Maximum number download links to get. </td></tr>
    <tr><td class="paramtype">string</td><td class="paramname">$active2new</td><td>Set state of all donwload links from "active" to "new". </td></tr>
    <tr><td class="paramtype">string</td><td class="paramname">$happyHour</td><td>Get download links only if it is Happy Hour. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>mixed "false" if no links or Array( [INTERVAL] =&gt; value Integer, timeout until next API-request. [LINKS] =&gt; value Integer, number of links in this result. [LIST] =&gt; value Integer, list ID. [LINKCOUNT] =&gt; value Integer, links waiting for download. [HHSTART] =&gt; value Integer, begin of Happy Hour CET/CEST. [HHEND] =&gt; value Integer, end of Happy Hour CET/CEST. [links] =&gt; [n] =&gt; Array( [baseurl] =&gt; Value String, URL without filename. [filename] =&gt; Value String, filename. [id] =&gt; Value Integer, link ID. ) ) </dd></dl>
<dl class="pre"><dt><b>Precondition:</b></dt><dd>None. </dd></dl>
<dl class="post"><dt><b>Postcondition:</b></dt><dd>None. </dd></dl>
<dl class="exception"><dt><b>Exceptions:</b></dt><dd>
  <table class="exception">
    <tr><td class="paramname">Exception</td><td>Wrong parameter type or value or error message from HomeloadTV. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="a00005_source.xhtml#l00161">161</a> of file <a class="el" href="a00005_source.xhtml">HomeLoadTV.php</a>.</p>

<p>References <a class="el" href="a00004_source.xhtml#l00021">$limit</a>.</p>

<p>Referenced by <a class="el" href="a00005_source.xhtml#l00314">download()</a>.</p>
<div class="fragment"><pre class="fragment">                                                                                  {

        <span class="comment">// Check parameters</span>
        <span class="keywordflow">if</span> (!is_int(<a class="code" href="a00004.xhtml#ae05862a0294251c88629b141b5ce329a">$limit</a>))
            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $limit must be integer type!&#39;</span>);
        <span class="keywordflow">if</span> ((<a class="code" href="a00004.xhtml#ae05862a0294251c88629b141b5ce329a">$limit</a> &lt; 1))
            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $limit must be greater than zero!&#39;</span>);
        <span class="keywordflow">if</span> (!is_bool($active2new))
            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $active2new must be boolean type!&#39;</span>);
        <span class="keywordflow">if</span> (!is_bool($happyHour))
            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $happyHour must be boolean type!&#39;</span>);

        <span class="comment">// Create Request-URI</span>
        $uri = array(
            <span class="stringliteral">&#39;do=getlinks&#39;</span>,
            <span class="stringliteral">&#39;uid=&#39;</span> . $this-&gt;email,
            <span class="stringliteral">&#39;password=&#39;</span> . $this-&gt;password,
            <span class="stringliteral">&#39;limit=&#39;</span> . <a class="code" href="a00004.xhtml#ae05862a0294251c88629b141b5ce329a">$limit</a>
        );
        $uri[] = ($active2new === <span class="keyword">true</span>) ? <span class="stringliteral">&#39;protocnew=true&#39;</span> : <span class="stringliteral">&#39;protocnew=false&#39;</span>;
        $uri[] = ($happyHour === <span class="keyword">true</span>) ? <span class="stringliteral">&#39;onlyhh=true&#39;</span> : <span class="stringliteral">&#39;onlyhh=false&#39;</span>;

        <span class="comment">// Concatenate URI array, add URI-prefix and do GET-Request</span>
        $result = file_get_contents(self::$APIuriPrefix . implode(<span class="charliteral">&#39;&amp;&#39;</span>, $uri));
        unset($uri);

        <span class="comment">// Error handling</span>
        <span class="keywordflow">if</span> (!is_string($result) || empty($result)) {
            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: No result from GET request!&#39;</span>);
        }
        <span class="keywordflow">if</span> (!strpos($result, <span class="charliteral">&#39;;&#39;</span>)) {
            <span class="keywordflow">if</span> (0 === strcmp(<span class="stringliteral">&quot;NO_NEW_LINKS&quot;</span>, $result)) {
                <span class="keywordflow">return</span> <span class="keyword">false</span>;
            } <span class="keywordflow">else</span> {
                <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: &#39;</span> . $result);
            }
        }

        <span class="comment">// Get links, remove numeric keys and convert link IDs from string to integer</span>
        $links = array();
        preg_match_all(<span class="stringliteral">&#39;#.*(?P&lt;url&gt;http://.+);(?P&lt;id&gt;\d+);#m&#39;</span>, $result, $links, PREG_SET_ORDER);
        <span class="keywordflow">foreach</span> ($links as &amp;$link) {
            unset($link[0], $link[1], $link[2], $link[3]);
            $link[id] = intval($link[<span class="keywordtype">id</span>]);
        }

        <span class="comment">// Get parameters, convert values from string to integer</span>
        <span class="comment">// and combine keys and values</span>
        $params = array();
        preg_match_all(<span class="stringliteral">&#39;#([A-Z]+)=(\d+);#m&#39;</span>, $result, $params);
        $params[2] = array_map(intval, $params[2]);
        $result = array_combine($params[1], $params[2]);
        unset($params);

        <span class="comment">// Add links to result array</span>
        $result[<span class="stringliteral">&#39;links&#39;</span>] = &amp;$links;

        <span class="comment">// Return results</span>
        <span class="keywordflow">return</span>($result);
    }
</pre></div>
<p><div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00002_a568d46c9f41fd833874aacacf2d26e57_icgraph.svg" width="376" height="40"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a5989cc319d99120c3fc57e59f42ccb11"></a><!-- doxytag: member="HomeLoadTV::setProcessing" ref="a5989cc319d99120c3fc57e59f42ccb11" args="($list)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00002.xhtml#a5989cc319d99120c3fc57e59f42ccb11">HomeLoadTV::setProcessing</a> </td>
          <td>(</td>
          <td class="paramtype">$&#160;</td>
          <td class="paramname"><em>list</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Sets the state of a list to "processing".</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramtype">integer</td><td class="paramname">$list</td><td>ID of list. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>boolean "true" on success or "false" on error. </dd></dl>
<dl class="pre"><dt><b>Precondition:</b></dt><dd>None. </dd></dl>
<dl class="post"><dt><b>Postcondition:</b></dt><dd>None. </dd></dl>

<p>Definition at line <a class="el" href="a00005_source.xhtml#l00230">230</a> of file <a class="el" href="a00005_source.xhtml">HomeLoadTV.php</a>.</p>
<div class="fragment"><pre class="fragment">                                         {

        <span class="comment">// Check parameters</span>
        <span class="keywordflow">if</span> (!is_integer($list))
            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $limit must be integer type!&#39;</span>);
        <span class="keywordflow">if</span> ($list &lt; 0)
            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $limit must be greater than zero!&#39;</span>);

        <span class="comment">// Create Request-URI</span>
        $uri = array(
            <span class="stringliteral">&#39;do=setstate&#39;</span>,
            <span class="stringliteral">&#39;state=processing&#39;</span>,
            <span class="stringliteral">&#39;uid=&#39;</span> . $this-&gt;email,
            <span class="stringliteral">&#39;list=&#39;</span> . $list
        );

        <span class="comment">// Concatenate URI array, add URI-prefix, do GET-Request and check if result is OK</span>
        <span class="keywordflow">return</span>(0 === strcmp(<span class="stringliteral">&quot;OK&quot;</span>, file_get_contents(self::$APIuriPrefix . implode(<span class="charliteral">&#39;&amp;&#39;</span>, $uri))));
    }
</pre></div>
</div>
</div>
<a class="anchor" id="a036df968051a20fee7f3f633f2ff1c97"></a><!-- doxytag: member="HomeLoadTV::setState" ref="a036df968051a20fee7f3f633f2ff1c97" args="($id, $state, $filesize=0, $speed=0, $error= '', $filename= '')" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00002.xhtml#a036df968051a20fee7f3f633f2ff1c97">HomeLoadTV::setState</a> </td>
          <td>(</td>
          <td class="paramtype">$&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">$&#160;</td>
          <td class="paramname"><em>state</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">$&#160;</td>
          <td class="paramname"><em>filesize</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">$&#160;</td>
          <td class="paramname"><em>speed</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">$&#160;</td>
          <td class="paramname"><em>error</em> = <code>''</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">$&#160;</td>
          <td class="paramname"><em>filename</em> = <code>''</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Sets the state of a download link.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramtype">integer</td><td class="paramname">$id</td><td>ID of download link. </td></tr>
    <tr><td class="paramtype">string</td><td class="paramname">$state</td><td>Either "new" or "finished". </td></tr>
    <tr><td class="paramtype">integer</td><td class="paramname">$filesize</td><td>Filesize in KiloByte </td></tr>
    <tr><td class="paramtype">integer</td><td class="paramname">$speed</td><td>Download speed in KiloBit/s. </td></tr>
    <tr><td class="paramtype">string</td><td class="paramname">$error</td><td>Empty string for success, "endHH" for end of Happy Hour or any other error message. Not used with state "new" </td></tr>
    <tr><td class="paramtype">string</td><td class="paramname">$filename</td><td>Name of file. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>boolean "true" on success or "false" on error. </dd></dl>
<dl class="pre"><dt><b>Precondition:</b></dt><dd>None. </dd></dl>
<dl class="post"><dt><b>Postcondition:</b></dt><dd>None. </dd></dl>

<p>Definition at line <a class="el" href="a00005_source.xhtml#l00263">263</a> of file <a class="el" href="a00005_source.xhtml">HomeLoadTV.php</a>.</p>

<p>Referenced by <a class="el" href="a00005_source.xhtml#l00314">download()</a>.</p>
<div class="fragment"><pre class="fragment">                                                                                                  {

        <span class="comment">// Check parameters</span>
        <span class="keywordflow">if</span> (!is_integer($id))
            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $id must be integer type!&#39;</span>);
        <span class="keywordflow">if</span> ($id &lt; 0)
            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $id must be greater than zero!&#39;</span>);
        <span class="keywordflow">if</span> (!is_string($state))
            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $state must be string type!&#39;</span>);
        <span class="keywordflow">if</span> (!((0 === strcmp($state, <span class="stringliteral">&quot;new&quot;</span>)) || (0 === strcmp($state, <span class="stringliteral">&quot;finished&quot;</span>))))
            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $state must not be string type!&#39;</span>);
        <span class="keywordflow">if</span> (!is_integer($filesize))
            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $filesize must be integer type!&#39;</span>);
        <span class="keywordflow">if</span> ($filesize &lt; 0)
            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $filesize must be greater than zero!&#39;</span>);
        <span class="keywordflow">if</span> (!is_integer($speed))
            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $speed must be integer type!&#39;</span>);
        <span class="keywordflow">if</span> ($speed &lt; 0)
            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $speed must be greater than zero!&#39;</span>);
        <span class="keywordflow">if</span> (!is_string($error))
            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $error must be string type!&#39;</span>);
        <span class="keywordflow">if</span> (!is_string($filename))
            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $filename must be string type!&#39;</span>);

        <span class="comment">// Create Request-URI</span>
        $uri = array(
            <span class="stringliteral">&#39;do=setstate&#39;</span>,
            <span class="stringliteral">&#39;uid=&#39;</span> . $this-&gt;email,
            <span class="stringliteral">&#39;id=&#39;</span> . $id,
            <span class="stringliteral">&#39;state=&#39;</span> . $state,
            <span class="stringliteral">&#39;error=&#39;</span> . $error,
            <span class="stringliteral">&#39;filesize=&#39;</span> . $filesize,
            <span class="stringliteral">&#39;speed=&#39;</span> . $speed,
            <span class="stringliteral">&#39;file=&#39;</span> . base64_encode($filename),
        );

        <span class="comment">// Concatenate URI array, add URI-prefix, do GET-Request and check if result is OK</span>
        <span class="keywordflow">return</span>(0 === strcmp(<span class="stringliteral">&quot;OK&quot;</span>, file_get_contents(self::$APIuriPrefix . implode(<span class="charliteral">&#39;&amp;&#39;</span>, $uri))));
    }
</pre></div>
<p><div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00002_a036df968051a20fee7f3f633f2ff1c97_icgraph.svg" width="376" height="40"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<hr/><h2>Field Documentation</h2>
<a class="anchor" id="af91e7d6d3eca7da321784ba44bf0a713"></a><!-- doxytag: member="HomeLoadTV::$APIuriPrefix" ref="af91e7d6d3eca7da321784ba44bf0a713" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">string HomeLoadTV::$APIuriPrefix = 'http://www.homeloadtv.com/api/?'<code> [static, private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Prefix of <a class="el" href="a00002.xhtml">HomeLoadTV</a> API-URI. </p>

<p>Definition at line <a class="el" href="a00005_source.xhtml#l00059">59</a> of file <a class="el" href="a00005_source.xhtml">HomeLoadTV.php</a>.</p>

</div>
</div>
<a class="anchor" id="ac183db7065132da7dcc0e258e89d55fe"></a><!-- doxytag: member="HomeLoadTV::$curl" ref="ac183db7065132da7dcc0e258e89d55fe" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">object HomeLoadTV::$curl = null<code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>PHP-cURL-object. </p>

<p>Definition at line <a class="el" href="a00005_source.xhtml#l00077">77</a> of file <a class="el" href="a00005_source.xhtml">HomeLoadTV.php</a>.</p>

</div>
</div>
<a class="anchor" id="aaed49f90856573061428048f59ea93ee"></a><!-- doxytag: member="HomeLoadTV::$email" ref="aaed49f90856573061428048f59ea93ee" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">string HomeLoadTV::$email = null<code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p><a class="el" href="a00002.xhtml">HomeLoadTV</a> user id (email address). </p>

<p>Definition at line <a class="el" href="a00005_source.xhtml#l00047">47</a> of file <a class="el" href="a00005_source.xhtml">HomeLoadTV.php</a>.</p>

<p>Referenced by <a class="el" href="a00005_source.xhtml#l00091">__construct()</a>.</p>

</div>
</div>
<a class="anchor" id="a10dba20b2453981b6d291ca56afa78e4"></a><!-- doxytag: member="HomeLoadTV::$fd" ref="a10dba20b2453981b6d291ca56afa78e4" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ressource HomeLoadTV::$fd = null<code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>File pointer resource of lockfile </p>

<p>Definition at line <a class="el" href="a00005_source.xhtml#l00041">41</a> of file <a class="el" href="a00005_source.xhtml">HomeLoadTV.php</a>.</p>

</div>
</div>
<a class="anchor" id="a8cc25db413d0b3b45bb791123b9b799a"></a><!-- doxytag: member="HomeLoadTV::$lockfile" ref="a8cc25db413d0b3b45bb791123b9b799a" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">string HomeLoadTV::$lockfile = 'HomeLoadTV.lock'<code> [static, private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Name of locking-file. </p>

<p>Definition at line <a class="el" href="a00005_source.xhtml#l00035">35</a> of file <a class="el" href="a00005_source.xhtml">HomeLoadTV.php</a>.</p>

</div>
</div>
<a class="anchor" id="a11451731ed84eaacc1d646da720d7902"></a><!-- doxytag: member="HomeLoadTV::$password" ref="a11451731ed84eaacc1d646da720d7902" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">string HomeLoadTV::$password = null<code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p><a class="el" href="a00002.xhtml">HomeLoadTV</a> user password. </p>

<p>Definition at line <a class="el" href="a00005_source.xhtml#l00053">53</a> of file <a class="el" href="a00005_source.xhtml">HomeLoadTV.php</a>.</p>

<p>Referenced by <a class="el" href="a00005_source.xhtml#l00091">__construct()</a>.</p>

</div>
</div>
<a class="anchor" id="afc7be5f78e1d06a5c49d235e57ef4854"></a><!-- doxytag: member="HomeLoadTV::$ThumbUriPrefix" ref="afc7be5f78e1d06a5c49d235e57ef4854" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">string HomeLoadTV::$ThumbUriPrefix = 'http://thumbs.onlinetvrecorder.com/'<code> [static, private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Prefix of thumbnail URL </p>

<p>Definition at line <a class="el" href="a00005_source.xhtml#l00065">65</a> of file <a class="el" href="a00005_source.xhtml">HomeLoadTV.php</a>.</p>

</div>
</div>
<a class="anchor" id="a3a6a52ac9557e8c118c8179e6a5da82c"></a><!-- doxytag: member="HomeLoadTV::$ThumbUriSuffix" ref="a3a6a52ac9557e8c118c8179e6a5da82c" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">string HomeLoadTV::$ThumbUriSuffix = '____A.jpg'<code> [static, private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Suffix of thumbnail URL </p>

<p>Definition at line <a class="el" href="a00005_source.xhtml#l00071">71</a> of file <a class="el" href="a00005_source.xhtml">HomeLoadTV.php</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="a00005_source.xhtml">HomeLoadTV.php</a></li>
</ul>
</div><!-- contents -->
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="a00002.xhtml">HomeLoadTV</a>      </li>

    <li class="footer">Generated on Wed Jun 27 2012 15:31:08 for HLTVDLM by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
