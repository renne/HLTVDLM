<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>HLTVDLM: HomeLoadTV.php Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">HLTVDLM
   
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('a00005.xhtml','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">HomeLoadTV.php</div>  </div>
</div><!--header-->
<div class="contents">
<a href="a00005.xhtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 &lt;?php
<a name="l00002"></a>00002 
<a name="l00003"></a>00003 <span class="comment">// Include CURL downloader class</span>
<a name="l00004"></a>00004 require_once(<span class="stringliteral">&#39;CURL.php&#39;</span>);
<a name="l00005"></a>00005 
<a name="l00029"></a><a class="code" href="a00002.xhtml">00029</a> <span class="keyword">class </span><a class="code" href="a00002.xhtml">HomeLoadTV</a> {
<a name="l00030"></a>00030 
<a name="l00035"></a><a class="code" href="a00002.xhtml#a8cc25db413d0b3b45bb791123b9b799a">00035</a>     <span class="keyword">private</span> <span class="keyword">static</span> <a class="code" href="a00002.xhtml#a8cc25db413d0b3b45bb791123b9b799a">$lockfile</a> = <span class="stringliteral">&#39;HomeLoadTV.lock&#39;</span>;
<a name="l00036"></a>00036 
<a name="l00041"></a><a class="code" href="a00002.xhtml#a10dba20b2453981b6d291ca56afa78e4">00041</a>     <span class="keyword">private</span> <a class="code" href="a00002.xhtml#a10dba20b2453981b6d291ca56afa78e4">$fd</a> = null;
<a name="l00042"></a>00042 
<a name="l00047"></a><a class="code" href="a00002.xhtml#aaed49f90856573061428048f59ea93ee">00047</a>     <span class="keyword">private</span> <a class="code" href="a00002.xhtml#aaed49f90856573061428048f59ea93ee">$email</a> = null;
<a name="l00048"></a>00048 
<a name="l00053"></a><a class="code" href="a00002.xhtml#a11451731ed84eaacc1d646da720d7902">00053</a>     <span class="keyword">private</span> <a class="code" href="a00002.xhtml#a11451731ed84eaacc1d646da720d7902">$password</a> = null;
<a name="l00054"></a>00054 
<a name="l00059"></a><a class="code" href="a00002.xhtml#af91e7d6d3eca7da321784ba44bf0a713">00059</a>     <span class="keyword">private</span> <span class="keyword">static</span> <a class="code" href="a00002.xhtml#af91e7d6d3eca7da321784ba44bf0a713">$APIuriPrefix</a> = <span class="stringliteral">&#39;http://www.homeloadtv.com/api/?&#39;</span>;
<a name="l00060"></a>00060 
<a name="l00065"></a><a class="code" href="a00002.xhtml#afc7be5f78e1d06a5c49d235e57ef4854">00065</a>     <span class="keyword">private</span> <span class="keyword">static</span> <a class="code" href="a00002.xhtml#afc7be5f78e1d06a5c49d235e57ef4854">$ThumbUriPrefix</a> = <span class="stringliteral">&#39;http://thumbs.onlinetvrecorder.com/&#39;</span>;
<a name="l00066"></a>00066 
<a name="l00071"></a><a class="code" href="a00002.xhtml#a669a9cc8fe0208e3ce884358e627702a">00071</a>     <span class="keyword">private</span> <span class="keyword">static</span> <a class="code" href="a00002.xhtml#a669a9cc8fe0208e3ce884358e627702a">$ThumbUriSuffix</a> = array(
<a name="l00072"></a>00072         <span class="charliteral">&#39;A&#39;</span> =&gt; <span class="stringliteral">&#39;____A.jpg&#39;</span>,
<a name="l00073"></a>00073         <span class="charliteral">&#39;B&#39;</span> =&gt; <span class="stringliteral">&#39;____B.jpg&#39;</span>,
<a name="l00074"></a>00074         <span class="charliteral">&#39;0&#39;</span> =&gt; <span class="stringliteral">&#39;____0.jpg&#39;</span>,
<a name="l00075"></a>00075         <span class="charliteral">&#39;1&#39;</span> =&gt; <span class="stringliteral">&#39;____1.jpg&#39;</span>,
<a name="l00076"></a>00076         <span class="charliteral">&#39;2&#39;</span> =&gt; <span class="stringliteral">&#39;____2.jpg&#39;</span>,
<a name="l00077"></a>00077         <span class="charliteral">&#39;3&#39;</span> =&gt; <span class="stringliteral">&#39;____3.jpg&#39;</span>,
<a name="l00078"></a>00078         <span class="charliteral">&#39;4&#39;</span> =&gt; <span class="stringliteral">&#39;____4.jpg&#39;</span>,
<a name="l00079"></a>00079         <span class="charliteral">&#39;5&#39;</span> =&gt; <span class="stringliteral">&#39;____5.jpg&#39;</span>,
<a name="l00080"></a>00080         <span class="charliteral">&#39;6&#39;</span> =&gt; <span class="stringliteral">&#39;____6.jpg&#39;</span>,
<a name="l00081"></a>00081         <span class="charliteral">&#39;7&#39;</span> =&gt; <span class="stringliteral">&#39;____7.jpg&#39;</span>,
<a name="l00082"></a>00082         <span class="charliteral">&#39;8&#39;</span> =&gt; <span class="stringliteral">&#39;____8.jpg&#39;</span>,
<a name="l00083"></a>00083         <span class="charliteral">&#39;9&#39;</span> =&gt; <span class="stringliteral">&#39;____9.jpg&#39;</span>,
<a name="l00084"></a>00084     );
<a name="l00085"></a>00085 
<a name="l00090"></a><a class="code" href="a00002.xhtml#ac183db7065132da7dcc0e258e89d55fe">00090</a>     <span class="keyword">private</span> <a class="code" href="a00002.xhtml#ac183db7065132da7dcc0e258e89d55fe">$curl</a> = null;
<a name="l00091"></a>00091 
<a name="l00104"></a><a class="code" href="a00002.xhtml#aaaa2656ddeca0b10e9cfbdcf33af6171">00104</a>     <span class="keyword">public</span> <span class="keyword">function</span> <a class="code" href="a00002.xhtml#aaaa2656ddeca0b10e9cfbdcf33af6171">__construct</a>(<a class="code" href="a00002.xhtml#aaed49f90856573061428048f59ea93ee">$email</a>, <a class="code" href="a00002.xhtml#a11451731ed84eaacc1d646da720d7902">$password</a>) {
<a name="l00105"></a>00105 
<a name="l00106"></a>00106         <span class="comment">// Open lockfile</span>
<a name="l00107"></a>00107         $this-&gt;fd = fopen(sys_get_temp_dir() . <span class="charliteral">&#39;/&#39;</span> . self::$lockfile, <span class="charliteral">&#39;w&#39;</span>);
<a name="l00108"></a>00108         <span class="keywordflow">if</span> (FALSE === $this-&gt;fd) {
<a name="l00109"></a>00109             <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Cannot open lockfile &#39;</span> . sys_get_temp_dir() . <span class="charliteral">&#39;/&#39;</span> . self::$lockfile . <span class="charliteral">&#39;!&#39;</span>);
<a name="l00110"></a>00110         }
<a name="l00111"></a>00111 
<a name="l00112"></a>00112         <span class="comment">// Set lock on lockfile and Check if program is running</span>
<a name="l00113"></a>00113         <span class="keywordflow">if</span> (!flock($this-&gt;fd, LOCK_EX | LOCK_NB)) {
<a name="l00114"></a>00114             <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: !!! Cannot set lock on lockfile &#39;</span> . sys_get_temp_dir() . <span class="charliteral">&#39;/&#39;</span> . self::$lockfile . <span class="stringliteral">&#39;!!!&#39;</span>);
<a name="l00115"></a>00115         }
<a name="l00116"></a>00116 
<a name="l00117"></a>00117         <span class="comment">// Check parameters</span>
<a name="l00118"></a>00118         <span class="keywordflow">if</span> (!is_string(<a class="code" href="a00002.xhtml#aaed49f90856573061428048f59ea93ee">$email</a>))
<a name="l00119"></a>00119             <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $email must be string type!&#39;</span>);
<a name="l00120"></a>00120         <span class="keywordflow">if</span> (!is_string(<a class="code" href="a00002.xhtml#a11451731ed84eaacc1d646da720d7902">$password</a>))
<a name="l00121"></a>00121             <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $password must be string type!&#39;</span>);
<a name="l00122"></a>00122         <span class="keywordflow">if</span> (empty(<a class="code" href="a00002.xhtml#aaed49f90856573061428048f59ea93ee">$email</a>))
<a name="l00123"></a>00123             <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $email must not be empty!&#39;</span>);
<a name="l00124"></a>00124         <span class="keywordflow">if</span> (empty(<a class="code" href="a00002.xhtml#a11451731ed84eaacc1d646da720d7902">$password</a>))
<a name="l00125"></a>00125             <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $password must not be empty!&#39;</span>);
<a name="l00126"></a>00126 
<a name="l00127"></a>00127         <span class="comment">// Assign object variables</span>
<a name="l00128"></a>00128         $this-&gt;email = <a class="code" href="a00002.xhtml#aaed49f90856573061428048f59ea93ee">$email</a>;
<a name="l00129"></a>00129         $this-&gt;password = <a class="code" href="a00002.xhtml#a11451731ed84eaacc1d646da720d7902">$password</a>;
<a name="l00130"></a>00130     }
<a name="l00131"></a>00131 
<a name="l00141"></a><a class="code" href="a00002.xhtml#a569e9d37b9020f55f88a977f13659d8c">00141</a>     <span class="keyword">public</span> <span class="keyword">function</span> <a class="code" href="a00002.xhtml#a569e9d37b9020f55f88a977f13659d8c">__destruct</a>() {
<a name="l00142"></a>00142 
<a name="l00143"></a>00143         <span class="comment">// Delete curl object</span>
<a name="l00144"></a>00144         unset($this-&gt;curl);
<a name="l00145"></a>00145 
<a name="l00146"></a>00146         <span class="comment">// Close file descriptor of lock file</span>
<a name="l00147"></a>00147         @fclose($this-&gt;fd);
<a name="l00148"></a>00148     }
<a name="l00149"></a>00149 
<a name="l00174"></a><a class="code" href="a00002.xhtml#a568d46c9f41fd833874aacacf2d26e57">00174</a>     <span class="keyword">public</span> <span class="keyword">function</span> <a class="code" href="a00002.xhtml#a568d46c9f41fd833874aacacf2d26e57">getLinks</a>(<a class="code" href="a00004.xhtml#ae05862a0294251c88629b141b5ce329a">$limit</a> = 100, $active2new = <span class="keyword">true</span>, $happyHour = <span class="keyword">true</span>) {
<a name="l00175"></a>00175 
<a name="l00176"></a>00176         <span class="comment">// Check parameters</span>
<a name="l00177"></a>00177         <span class="keywordflow">if</span> (!is_int(<a class="code" href="a00004.xhtml#ae05862a0294251c88629b141b5ce329a">$limit</a>))
<a name="l00178"></a>00178             <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $limit must be integer type!&#39;</span>);
<a name="l00179"></a>00179         <span class="keywordflow">if</span> ((<a class="code" href="a00004.xhtml#ae05862a0294251c88629b141b5ce329a">$limit</a> &lt; 1))
<a name="l00180"></a>00180             <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $limit must be greater than zero!&#39;</span>);
<a name="l00181"></a>00181         <span class="keywordflow">if</span> (!is_bool($active2new))
<a name="l00182"></a>00182             <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $active2new must be boolean type!&#39;</span>);
<a name="l00183"></a>00183         <span class="keywordflow">if</span> (!is_bool($happyHour))
<a name="l00184"></a>00184             <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $happyHour must be boolean type!&#39;</span>);
<a name="l00185"></a>00185 
<a name="l00186"></a>00186         <span class="comment">// Create Request-URI</span>
<a name="l00187"></a>00187         $uri = array(
<a name="l00188"></a>00188             <span class="stringliteral">&#39;do=getlinks&#39;</span>,
<a name="l00189"></a>00189             <span class="stringliteral">&#39;uid=&#39;</span> . $this-&gt;email,
<a name="l00190"></a>00190             <span class="stringliteral">&#39;password=&#39;</span> . $this-&gt;password,
<a name="l00191"></a>00191             <span class="stringliteral">&#39;limit=&#39;</span> . <a class="code" href="a00004.xhtml#ae05862a0294251c88629b141b5ce329a">$limit</a>
<a name="l00192"></a>00192         );
<a name="l00193"></a>00193         $uri[] = ($active2new === <span class="keyword">true</span>) ? <span class="stringliteral">&#39;protocnew=true&#39;</span> : <span class="stringliteral">&#39;protocnew=false&#39;</span>;
<a name="l00194"></a>00194         $uri[] = ($happyHour === <span class="keyword">true</span>) ? <span class="stringliteral">&#39;onlyhh=true&#39;</span> : <span class="stringliteral">&#39;onlyhh=false&#39;</span>;
<a name="l00195"></a>00195 
<a name="l00196"></a>00196         <span class="comment">// Concatenate URI array, add URI-prefix and do GET-Request</span>
<a name="l00197"></a>00197         $result = file_get_contents(self::$APIuriPrefix . implode(<span class="charliteral">&#39;&amp;&#39;</span>, $uri));
<a name="l00198"></a>00198         unset($uri);
<a name="l00199"></a>00199 
<a name="l00200"></a>00200         <span class="comment">// Error handling</span>
<a name="l00201"></a>00201         <span class="keywordflow">if</span> (!is_string($result) || empty($result)) {
<a name="l00202"></a>00202             <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: No result from GET request!&#39;</span>);
<a name="l00203"></a>00203         }
<a name="l00204"></a>00204         <span class="keywordflow">if</span> (!strpos($result, <span class="charliteral">&#39;;&#39;</span>)) {
<a name="l00205"></a>00205             <span class="keywordflow">if</span> (0 === strcmp(<span class="stringliteral">&quot;NO_NEW_LINKS&quot;</span>, $result)) {
<a name="l00206"></a>00206                 <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00207"></a>00207             } <span class="keywordflow">else</span> {
<a name="l00208"></a>00208                 <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: &#39;</span> . $result);
<a name="l00209"></a>00209             }
<a name="l00210"></a>00210         }
<a name="l00211"></a>00211 
<a name="l00212"></a>00212         <span class="comment">// Get links, remove numeric keys and convert link IDs from string to integer</span>
<a name="l00213"></a>00213         $links = array();
<a name="l00214"></a>00214         preg_match_all(<span class="stringliteral">&#39;#.*(?P&lt;url&gt;http://.+);(?P&lt;id&gt;\d+);#m&#39;</span>, $result, $links, PREG_SET_ORDER);
<a name="l00215"></a>00215         <span class="keywordflow">foreach</span> ($links as &amp;$link) {
<a name="l00216"></a>00216             unset($link[0], $link[1], $link[2], $link[3]);
<a name="l00217"></a>00217             $link[id] = intval($link[<span class="keywordtype">id</span>]);
<a name="l00218"></a>00218         }
<a name="l00219"></a>00219 
<a name="l00220"></a>00220         <span class="comment">// Get parameters, convert values from string to integer</span>
<a name="l00221"></a>00221         <span class="comment">// and combine keys and values</span>
<a name="l00222"></a>00222         $params = array();
<a name="l00223"></a>00223         preg_match_all(<span class="stringliteral">&#39;#([A-Z]+)=(\d+);#m&#39;</span>, $result, $params);
<a name="l00224"></a>00224         $params[2] = array_map(intval, $params[2]);
<a name="l00225"></a>00225         $result = array_combine($params[1], $params[2]);
<a name="l00226"></a>00226         unset($params);
<a name="l00227"></a>00227 
<a name="l00228"></a>00228         <span class="comment">// Add links to result array</span>
<a name="l00229"></a>00229         $result[<span class="stringliteral">&#39;links&#39;</span>] = &amp;$links;
<a name="l00230"></a>00230 
<a name="l00231"></a>00231         <span class="comment">// Return results</span>
<a name="l00232"></a>00232         <span class="keywordflow">return</span>($result);
<a name="l00233"></a>00233     }
<a name="l00234"></a>00234 
<a name="l00243"></a><a class="code" href="a00002.xhtml#a5989cc319d99120c3fc57e59f42ccb11">00243</a>     <span class="keyword">public</span> <span class="keyword">function</span> <a class="code" href="a00002.xhtml#a5989cc319d99120c3fc57e59f42ccb11">setProcessing</a>($list) {
<a name="l00244"></a>00244 
<a name="l00245"></a>00245         <span class="comment">// Check parameters</span>
<a name="l00246"></a>00246         <span class="keywordflow">if</span> (!is_integer($list))
<a name="l00247"></a>00247             <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $limit must be integer type!&#39;</span>);
<a name="l00248"></a>00248         <span class="keywordflow">if</span> ($list &lt; 0)
<a name="l00249"></a>00249             <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $limit must be greater than zero!&#39;</span>);
<a name="l00250"></a>00250 
<a name="l00251"></a>00251         <span class="comment">// Create Request-URI</span>
<a name="l00252"></a>00252         $uri = array(
<a name="l00253"></a>00253             <span class="stringliteral">&#39;do=setstate&#39;</span>,
<a name="l00254"></a>00254             <span class="stringliteral">&#39;state=processing&#39;</span>,
<a name="l00255"></a>00255             <span class="stringliteral">&#39;uid=&#39;</span> . $this-&gt;email,
<a name="l00256"></a>00256             <span class="stringliteral">&#39;list=&#39;</span> . $list
<a name="l00257"></a>00257         );
<a name="l00258"></a>00258 
<a name="l00259"></a>00259         <span class="comment">// Concatenate URI array, add URI-prefix, do GET-Request and check if result is OK</span>
<a name="l00260"></a>00260         <span class="keywordflow">return</span>(0 === strcmp(<span class="stringliteral">&quot;OK&quot;</span>, file_get_contents(self::$APIuriPrefix . implode(<span class="charliteral">&#39;&amp;&#39;</span>, $uri))));
<a name="l00261"></a>00261     }
<a name="l00262"></a>00262 
<a name="l00276"></a><a class="code" href="a00002.xhtml#a036df968051a20fee7f3f633f2ff1c97">00276</a>     <span class="keyword">public</span> <span class="keyword">function</span> <a class="code" href="a00002.xhtml#a036df968051a20fee7f3f633f2ff1c97">setState</a>($id, $state, $filesize = 0, $speed = 0, $error = <span class="stringliteral">&#39;&#39;</span>, $filename = <span class="stringliteral">&#39;&#39;</span>) {
<a name="l00277"></a>00277 
<a name="l00278"></a>00278         <span class="comment">// Check parameters</span>
<a name="l00279"></a>00279         <span class="keywordflow">if</span> (!is_integer($id))
<a name="l00280"></a>00280             <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $id must be integer type!&#39;</span>);
<a name="l00281"></a>00281         <span class="keywordflow">if</span> ($id &lt; 0)
<a name="l00282"></a>00282             <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $id must be greater than zero!&#39;</span>);
<a name="l00283"></a>00283         <span class="keywordflow">if</span> (!is_string($state))
<a name="l00284"></a>00284             <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $state must be string type!&#39;</span>);
<a name="l00285"></a>00285         <span class="keywordflow">if</span> (!((0 === strcmp($state, <span class="stringliteral">&quot;new&quot;</span>)) || (0 === strcmp($state, <span class="stringliteral">&quot;finished&quot;</span>))))
<a name="l00286"></a>00286             <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $state must not be string type!&#39;</span>);
<a name="l00287"></a>00287         <span class="keywordflow">if</span> (!is_integer($filesize))
<a name="l00288"></a>00288             <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $filesize must be integer type!&#39;</span>);
<a name="l00289"></a>00289         <span class="keywordflow">if</span> ($filesize &lt; 0)
<a name="l00290"></a>00290             <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $filesize must be greater than zero!&#39;</span>);
<a name="l00291"></a>00291         <span class="keywordflow">if</span> (!is_integer($speed))
<a name="l00292"></a>00292             <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $speed must be integer type!&#39;</span>);
<a name="l00293"></a>00293         <span class="keywordflow">if</span> ($speed &lt; 0)
<a name="l00294"></a>00294             <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $speed must be greater than zero!&#39;</span>);
<a name="l00295"></a>00295         <span class="keywordflow">if</span> (!is_string($error))
<a name="l00296"></a>00296             <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $error must be string type!&#39;</span>);
<a name="l00297"></a>00297         <span class="keywordflow">if</span> (!is_string($filename))
<a name="l00298"></a>00298             <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $filename must be string type!&#39;</span>);
<a name="l00299"></a>00299 
<a name="l00300"></a>00300         <span class="comment">// Create Request-URI</span>
<a name="l00301"></a>00301         $uri = array(
<a name="l00302"></a>00302             <span class="stringliteral">&#39;do=setstate&#39;</span>,
<a name="l00303"></a>00303             <span class="stringliteral">&#39;uid=&#39;</span> . $this-&gt;email,
<a name="l00304"></a>00304             <span class="stringliteral">&#39;id=&#39;</span> . $id,
<a name="l00305"></a>00305             <span class="stringliteral">&#39;state=&#39;</span> . $state,
<a name="l00306"></a>00306             <span class="stringliteral">&#39;error=&#39;</span> . $error,
<a name="l00307"></a>00307             <span class="stringliteral">&#39;filesize=&#39;</span> . $filesize,
<a name="l00308"></a>00308             <span class="stringliteral">&#39;speed=&#39;</span> . $speed,
<a name="l00309"></a>00309             <span class="stringliteral">&#39;file=&#39;</span> . base64_encode($filename),
<a name="l00310"></a>00310         );
<a name="l00311"></a>00311 
<a name="l00312"></a>00312         <span class="comment">// Concatenate URI array, add URI-prefix, do GET-Request and check if result is OK</span>
<a name="l00313"></a>00313         <span class="keywordflow">return</span>(0 === strcmp(<span class="stringliteral">&quot;OK&quot;</span>, file_get_contents(self::$APIuriPrefix . implode(<span class="charliteral">&#39;&amp;&#39;</span>, $uri))));
<a name="l00314"></a>00314     }
<a name="l00315"></a>00315 
<a name="l00327"></a><a class="code" href="a00002.xhtml#a4a60bef4826abc03f27cd8828f99b708">00327</a>     <span class="keyword">public</span> <span class="keyword">function</span> <a class="code" href="a00002.xhtml#a4a60bef4826abc03f27cd8828f99b708">download</a>(<a class="code" href="a00004.xhtml#a1b07c630eb02f770a082a013373a16d6">$directory</a>, $happyHour = <span class="keyword">true</span>, <a class="code" href="a00004.xhtml#ae05862a0294251c88629b141b5ce329a">$limit</a> = 100, <a class="code" href="a00004.xhtml#a8812e953c70aa15f8f01e0a83230e645">$emailFrom</a> = <span class="stringliteral">&quot;&quot;</span>) {
<a name="l00328"></a>00328 
<a name="l00329"></a>00329         <span class="comment">// Check parameters</span>
<a name="l00330"></a>00330         <span class="keywordflow">if</span> (!is_string(<a class="code" href="a00004.xhtml#a1b07c630eb02f770a082a013373a16d6">$directory</a>))
<a name="l00331"></a>00331             <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $directory must be string type!&#39;</span>);
<a name="l00332"></a>00332         <span class="keywordflow">if</span> (empty(<a class="code" href="a00004.xhtml#a1b07c630eb02f770a082a013373a16d6">$directory</a>))
<a name="l00333"></a>00333             <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $directory must not be empty!&#39;</span>);
<a name="l00334"></a>00334         <span class="keywordflow">if</span> (!is_writable(<a class="code" href="a00004.xhtml#a1b07c630eb02f770a082a013373a16d6">$directory</a>))
<a name="l00335"></a>00335             <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $directory must be writable!&#39;</span>);
<a name="l00336"></a>00336         <span class="keywordflow">if</span> (!is_bool($happyHour))
<a name="l00337"></a>00337             <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $happyHour must be boolean type!&#39;</span>);
<a name="l00338"></a>00338         <span class="keywordflow">if</span> (!is_integer(<a class="code" href="a00004.xhtml#ae05862a0294251c88629b141b5ce329a">$limit</a>))
<a name="l00339"></a>00339             <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $limit must be integer type!&#39;</span>);
<a name="l00340"></a>00340         <span class="keywordflow">if</span> (<a class="code" href="a00004.xhtml#ae05862a0294251c88629b141b5ce329a">$limit</a> &lt;= 0)
<a name="l00341"></a>00341             <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $limit must be greater than zero!&#39;</span>);
<a name="l00342"></a>00342         <span class="keywordflow">if</span> (!is_string(<a class="code" href="a00004.xhtml#a8812e953c70aa15f8f01e0a83230e645">$emailFrom</a>))
<a name="l00343"></a>00343             <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $emailFrom must be string type!&#39;</span>);
<a name="l00344"></a>00344 
<a name="l00345"></a>00345         <span class="comment">// Get list of links</span>
<a name="l00346"></a>00346         $list = $this-&gt;<a class="code" href="a00002.xhtml#a568d46c9f41fd833874aacacf2d26e57">getLinks</a>(<a class="code" href="a00004.xhtml#ae05862a0294251c88629b141b5ce329a">$limit</a>, <span class="keyword">true</span>, $happyHour);
<a name="l00347"></a>00347 
<a name="l00348"></a>00348         <span class="comment">// Check for links</span>
<a name="l00349"></a>00349         <span class="keywordflow">if</span> (!empty($list[<span class="stringliteral">&#39;links&#39;</span>])) {
<a name="l00350"></a>00350 
<a name="l00351"></a>00351             <span class="comment">// Create CURL object</span>
<a name="l00352"></a>00352             $this-&gt;curl = <span class="keyword">new</span> <a class="code" href="a00001.xhtml">CURL</a>();
<a name="l00353"></a>00353             <span class="keywordflow">if</span> (!is_object($this-&gt;curl)) {
<a name="l00354"></a>00354                 <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Cannot create cURL object!&#39;</span>);
<a name="l00355"></a>00355             }
<a name="l00356"></a>00356 
<a name="l00357"></a>00357             <span class="comment">// Loop through links</span>
<a name="l00358"></a>00358             <span class="keywordflow">foreach</span> ($list[<span class="stringliteral">&#39;links&#39;</span>] as $link) {
<a name="l00359"></a>00359 
<a name="l00360"></a>00360                 <span class="comment">// Get filename, name of recording and format if OTR recording</span>
<a name="l00361"></a>00361                 $rec = array();
<a name="l00362"></a>00362                 preg_match(<span class="stringliteral">&#39;#.*/\d*_?(?P&lt;filename&gt;(?P&lt;name&gt;.+_TVOON_DE)\.(?P&lt;format&gt;.*))#&#39;</span>, $link[url], $rec);
<a name="l00363"></a>00363                 $filename = (isset($rec[<span class="stringliteral">&#39;filename&#39;</span>])) ? $rec[<span class="stringliteral">&#39;filename&#39;</span>] : <span class="stringliteral">&#39;&#39;</span>;
<a name="l00364"></a>00364 
<a name="l00365"></a>00365                 <span class="comment">// Download link</span>
<a name="l00366"></a>00366                 $video = $this-&gt;curl-&gt;downloadFile($link[url], <a class="code" href="a00004.xhtml#a1b07c630eb02f770a082a013373a16d6">$directory</a>, $filename, 0660);
<a name="l00367"></a>00367 
<a name="l00368"></a>00368                 <span class="comment">// Handle errors</span>
<a name="l00369"></a>00369                 $errors = array();
<a name="l00370"></a>00370                 <span class="keywordflow">if</span> (0 != $video[<span class="stringliteral">&#39;errno&#39;</span>]) {
<a name="l00371"></a>00371                     $errors[<span class="stringliteral">&#39;video&#39;</span>] = $video;
<a name="l00372"></a>00372                     print_r($video);
<a name="l00373"></a>00373                 }
<a name="l00374"></a>00374 
<a name="l00375"></a>00375                 <span class="comment">// Call HomeloadTV-API and set state.</span>
<a name="l00376"></a>00376                 $state = (0 == $video[<span class="stringliteral">&#39;errno&#39;</span>]) ? <span class="stringliteral">&#39;finished&#39;</span> : <span class="stringliteral">&#39;new&#39;</span>;
<a name="l00377"></a>00377                 $this-&gt;<a class="code" href="a00002.xhtml#a036df968051a20fee7f3f633f2ff1c97">setState</a>($link[<span class="stringliteral">&#39;id&#39;</span>], $state, intval(filesize($video[<span class="stringliteral">&#39;filepath&#39;</span>]) / 1024), intval($video[<span class="stringliteral">&#39;speed_download&#39;</span>]), $video[<span class="stringliteral">&#39;error&#39;</span>], basename($video[<span class="stringliteral">&#39;filepath&#39;</span>]));
<a name="l00378"></a>00378 
<a name="l00379"></a>00379                 <span class="comment">// Download thumbnails</span>
<a name="l00380"></a>00380                 <span class="keywordflow">if</span> ((0 == $video[<span class="stringliteral">&#39;errno&#39;</span>]) &amp;&amp; !empty($filename) &amp;&amp; isset($rec[<span class="stringliteral">&#39;name&#39;</span>])) {
<a name="l00381"></a>00381 
<a name="l00382"></a>00382                     <span class="comment">// Loop through thumbnails</span>
<a name="l00383"></a>00383                     <span class="keywordflow">foreach</span> (self::$ThumbUriSuffix as $key =&gt; $suffix) {
<a name="l00384"></a>00384 
<a name="l00385"></a>00385                         <span class="comment">// Download thumbnail</span>
<a name="l00386"></a>00386                         $thumb = $this-&gt;curl-&gt;downloadFile(self::$ThumbUriPrefix . $rec[<span class="stringliteral">&#39;name&#39;</span>] . $suffix, <a class="code" href="a00004.xhtml#a1b07c630eb02f770a082a013373a16d6">$directory</a>, $filename . $suffix, 0660);
<a name="l00387"></a>00387 
<a name="l00388"></a>00388                         <span class="comment">// Handle errors</span>
<a name="l00389"></a>00389                         <span class="keywordflow">if</span> (0 != $thumb[<span class="stringliteral">&#39;errno&#39;</span>]) {
<a name="l00390"></a>00390                             $errors[<span class="stringliteral">&#39;thumb&#39;</span>][$key] = $thumb;
<a name="l00391"></a>00391                             print_r($thumb);
<a name="l00392"></a>00392                         }
<a name="l00393"></a>00393                     }
<a name="l00394"></a>00394                 }
<a name="l00395"></a>00395 
<a name="l00396"></a>00396                 <span class="comment">// Send mail with error messages</span>
<a name="l00397"></a>00397                 <span class="keywordflow">if</span> (!empty($errors) &amp;&amp; !empty(<a class="code" href="a00004.xhtml#a8812e953c70aa15f8f01e0a83230e645">$emailFrom</a>)) {
<a name="l00398"></a>00398                     mail($this-&gt;email, <span class="stringliteral">&#39;HomeLoadTV error message&#39;</span>, implode(<span class="stringliteral">&quot;\n&quot;</span>, $video), <span class="stringliteral">&#39;From: &#39;</span> . <a class="code" href="a00004.xhtml#a8812e953c70aa15f8f01e0a83230e645">$emailFrom</a>);
<a name="l00399"></a>00399                 }
<a name="l00400"></a>00400             }
<a name="l00401"></a>00401 
<a name="l00402"></a>00402             <span class="comment">// Destroy CURL object</span>
<a name="l00403"></a>00403             unset($this-&gt;curl);
<a name="l00404"></a>00404         }
<a name="l00405"></a>00405     }
<a name="l00406"></a>00406 
<a name="l00407"></a>00407 }
<a name="l00408"></a>00408 
<a name="l00409"></a>00409 ?&gt;
</pre></div></div><!-- contents -->
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="a00005.xhtml">HomeLoadTV.php</a>      </li>

    <li class="footer">Generated on Thu Jun 28 2012 22:04:15 for HLTVDLM by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
