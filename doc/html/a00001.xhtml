<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>HLTVDLM: CURL Class Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">HLTVDLM
   
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="classes.xhtml"><span>Data&#160;Structure&#160;Index</span></a></li>
      <li><a href="functions.xhtml"><span>Data&#160;Fields</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('a00001.xhtml','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a>  </div>
  <div class="headertitle">
<div class="title">CURL Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<!-- doxytag: class="CURL" --><table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00001.xhtml#af98c730c7445625ba4e60341fc604e08">__destruct</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00001.xhtml#a1d2c997569b8a91c7a5fce8bc9ae807e">downloadFile</a> ($url, $directory, $filename= '', $mode=0644)</td></tr>
<tr><td colspan="2"><h2><a name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00001.xhtml#a54e318f5d04c91b8fea9573f8f9cd1c0">getHeader</a> ($con, $header)</td></tr>
<tr><td colspan="2"><h2><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00001.xhtml#a9e29f76fc3f1b384198ab34b4fa69380">$header</a> = ''</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00001.xhtml#a6f0c8690fd697c350611e459166f910f">$fd</a> = null</td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock">
<p>Definition at line <a class="el" href="a00003_source.xhtml#l00023">23</a> of file <a class="el" href="a00003_source.xhtml">CURL.php</a>.</p>
</div><hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="af98c730c7445625ba4e60341fc604e08"></a><!-- doxytag: member="CURL::__destruct" ref="af98c730c7445625ba4e60341fc604e08" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00001.xhtml#af98c730c7445625ba4e60341fc604e08">CURL::__destruct</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>The destructor makes sure the file descriptor is closed. </p>
<dl class="pre"><dt><b>Precondition:</b></dt><dd>None. </dd></dl>
<dl class="post"><dt><b>Postcondition:</b></dt><dd>None. </dd></dl>

<p>Definition at line <a class="el" href="a00003_source.xhtml#l00042">42</a> of file <a class="el" href="a00003_source.xhtml">CURL.php</a>.</p>
<div class="fragment"><pre class="fragment">                                 {
        @fclose($this-&gt;fd);
    }
</pre></div>
</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="a1d2c997569b8a91c7a5fce8bc9ae807e"></a><!-- doxytag: member="CURL::downloadFile" ref="a1d2c997569b8a91c7a5fce8bc9ae807e" args="($url, $directory, $filename= '', $mode=0644)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00001.xhtml#a1d2c997569b8a91c7a5fce8bc9ae807e">CURL::downloadFile</a> </td>
          <td>(</td>
          <td class="paramtype">$&#160;</td>
          <td class="paramname"><em>url</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">$&#160;</td>
          <td class="paramname"><em>directory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">$&#160;</td>
          <td class="paramname"><em>filename</em> = <code>''</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">$&#160;</td>
          <td class="paramname"><em>mode</em> = <code>0644</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Downloads a file.</p>
<p>The filepath is created by appending the filename from $url to $directory.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramtype">string</td><td class="paramname">$url</td><td>Download URL </td></tr>
    <tr><td class="paramtype">string</td><td class="paramname">$directory</td><td>Target directory. </td></tr>
    <tr><td class="paramtype">string</td><td class="paramname">$filename</td><td>User provided filename or empty for automatic. </td></tr>
    <tr><td class="paramtype">integer</td><td class="paramname">$mode</td><td>File attributes (UNIX-chmod-style). </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>array of strings "FALSE" on local errors or Array( [filepath] =&gt; string Path to downloaded file. [errno] =&gt; integer <a class="el" href="a00001.xhtml">CURL</a> error number (zero on success). [error] =&gt; string <a class="el" href="a00001.xhtml">CURL</a> error description. [url] =&gt; string Last effective URL. [content_type] =&gt; string Content-Type: of the requested document, NULL indicates server did not send valid Content-Type: header. [http_code] =&gt; integer Last received HTTP code. [header_size] =&gt; integer Total size of all headers received. [request_size] =&gt; integer Total size of issued requests, currently only for HTTP requests. [filetime] =&gt; integer Remote time of the retrieved document, if -1 is returned the time of the document is unknown. [ssl_verify_result] =&gt; integer Result of SSL certification verification requested by setting CURLOPT_SSL_VERIFYPEER. [redirect_count] =&gt; integer Number of redirects. [total_time] =&gt; float Total transaction time in seconds for last transfer. [namelookup_time] =&gt; float Time in seconds until name resolving was complete. [connect_time] =&gt; float Time in seconds it took to establish the connection. [pretransfer_time] =&gt; float Time in seconds from start until just before file transfer begins. [size_upload] =&gt; integer Total number of bytes uploaded. [size_download] =&gt; integer Total number of bytes downloaded. [speed_download] =&gt; integer Average download speed. [speed_upload] =&gt; integer Average upload speed. [download_content_length] =&gt; integer content-length of download, read from Content-Length: field. [upload_content_length] =&gt; integer Specified size of upload. [starttransfer_time] =&gt; float Time in seconds until the first byte is about to be transferred. [redirect_time] =&gt; float Time in seconds of all redirection steps before final transaction was started. ) </dd></dl>
<dl class="pre"><dt><b>Precondition:</b></dt><dd>None. </dd></dl>
<dl class="post"><dt><b>Postcondition:</b></dt><dd>None. </dd></dl>
<dl class="exception"><dt><b>Exceptions:</b></dt><dd>
  <table class="exception">
    <tr><td class="paramname">Exception</td><td></td></tr>
  </table>
  </dd>
</dl>
<dl class="todo"><dt><b><a class="el" href="a00007.xhtml#_todo000001">Todo:</a></b></dt><dd>Escape/normalize filename. </dd></dl>

<p>Definition at line <a class="el" href="a00003_source.xhtml#l00110">110</a> of file <a class="el" href="a00003_source.xhtml">CURL.php</a>.</p>

<p>References <a class="el" href="a00004_source.xhtml#l00019">$directory</a>.</p>
<div class="fragment"><pre class="fragment">                                                                                 {

        <span class="comment">// Check parameters</span>
        <span class="keywordflow">if</span> (!is_string($url)) {
            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $url must be string type!&#39;</span>);
        }
        <span class="keywordflow">if</span> (empty($url)) {
            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $url must not be empty!&#39;</span>);
        }
        <span class="keywordflow">if</span> (!is_string(<a class="code" href="a00004.xhtml#a1b07c630eb02f770a082a013373a16d6">$directory</a>)) {
            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $directory must be string type!&#39;</span>);
        }
        <span class="keywordflow">if</span> (empty(<a class="code" href="a00004.xhtml#a1b07c630eb02f770a082a013373a16d6">$directory</a>)) {
            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $directory must not be empty!&#39;</span>);
        }
        <span class="keywordflow">if</span> (!is_writable(<a class="code" href="a00004.xhtml#a1b07c630eb02f770a082a013373a16d6">$directory</a>)) {
            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $directory must be writable!&#39;</span>);
        }
        <span class="keywordflow">if</span> (!is_string($filename)) {
            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $filename must be string type!&#39;</span>);
        }
        <span class="keywordflow">if</span> (!is_integer($mode)) {
            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Parameter $mode must be integer type!&#39;</span>);
        }
        <span class="keywordflow">if</span> ($mode &lt; 0) {
            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: $mode must be greater than zero!&#39;</span>);
        }

        <span class="comment">// Array with information about transfer</span>
        $result = array(
            <span class="comment">// Create filepath from URL or given filename</span>
            <span class="stringliteral">&#39;filepath&#39;</span> =&gt; (!empty($filename)) ? <a class="code" href="a00004.xhtml#a1b07c630eb02f770a082a013373a16d6">$directory</a> . <span class="charliteral">&#39;/&#39;</span> . $filename : <a class="code" href="a00004.xhtml#a1b07c630eb02f770a082a013373a16d6">$directory</a> . <span class="charliteral">&#39;/&#39;</span> . basename($url)
        );

        <span class="comment">// Open target file by appending or new file</span>
        <span class="keywordflow">if</span> (($this-&gt;fd = fopen($result[<span class="stringliteral">&#39;filepath&#39;</span>], <span class="stringliteral">&quot;a&quot;</span>)) === FALSE) {
            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Cannot open file descriptor of file &#39;</span> . $result[<span class="stringliteral">&#39;filepath&#39;</span>] . <span class="charliteral">&#39;!&#39;</span>);
            <span class="keywordflow">return</span> FALSE;
        }

        <span class="comment">// Set lock on file</span>
        <span class="keywordflow">if</span> (!flock($this-&gt;fd, LOCK_EX | LOCK_NB)) {
            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Cannot set lock on file descriptor of file &#39;</span> . $result[<span class="stringliteral">&#39;filepath&#39;</span>] . <span class="charliteral">&#39;!&#39;</span>);
            @fclose($this-&gt;fd);
            <span class="keywordflow">return</span> FALSE;
        }

        <span class="comment">// Initialize cURL</span>
        <span class="keywordflow">if</span> (($con = curl_init($url)) === FALSE) {
            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Initalizing cURL with URL &#39;</span> . $url . <span class="stringliteral">&#39;failed!&#39;</span>);
            @fclose($this-&gt;fd);
            <span class="keywordflow">return</span> FALSE;
        }

        <span class="comment">// Set cURL options</span>
        <span class="keywordflow">if</span> (!curl_setopt_array($con, array(
                    <span class="comment">// Select writing to file</span>
                    CURLOPT_FILE =&gt; $this-&gt;fd,
                    <span class="comment">// Do not write to file if HTTP status code &gt;= 400</span>
                    CURLOPT_FAILONERROR =&gt; <span class="keyword">true</span>,
                    <span class="comment">// Resume position of existing file</span>
                    CURLOPT_RESUME_FROM =&gt; filesize($result[<span class="stringliteral">&#39;filepath&#39;</span>]),
                    <span class="comment">// Follow redirects</span>
                    CURLOPT_FOLLOWLOCATION =&gt; <span class="keyword">true</span>,
                    <span class="comment">// Set callback function for parsing headers</span>
                    CURLOPT_HEADERFUNCTION =&gt; array($this, <span class="stringliteral">&#39;getHeader&#39;</span>)
                ))) {
            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Setting cURL options failed!&#39;</span>);
            @fclose($this-&gt;fd);
            <span class="keywordflow">return</span> FALSE;
        }

        <span class="comment">// Queue loop for HTTP code 503 &quot;Temporarily unavailable&quot;</span>
        <span class="keywordflow">do</span> {

            <span class="comment">// Reset header information</span>
            $this-&gt;header = <span class="stringliteral">&#39;&#39;</span>;

            <span class="comment">// Execute query</span>
            <span class="keywordflow">if</span> (!@curl_exec($con)) {
                <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Executing cURL failed!&#39;</span>);
                @fclose($this-&gt;fd);
                <span class="keywordflow">return</span> FALSE;
            }

            <span class="comment">// Get info about transfer</span>
            $result[<span class="stringliteral">&#39;errno&#39;</span>] = curl_errno($con);
            $result[<span class="stringliteral">&#39;error&#39;</span>] = curl_error($con);
            $result = @array_merge($result, curl_getinfo($con));

            <span class="comment">// Get retry time and wait if HTTP code 503</span>
            $retry = intval(preg_replace(<span class="stringliteral">&#39;/.*Retry-After: *(\d+).*/s&#39;</span>, <span class="stringliteral">&#39;$1&#39;</span>, $this-&gt;header));
            <span class="keywordflow">if</span> ((503 === intval($result[<span class="stringliteral">&#39;http_code&#39;</span>])) &amp;&amp; ($retry &gt; 0)) {
                sleep($retry);
            }

            <span class="comment">// End of queue loop for HTTP code 503 &quot;Temporarily unavailable&quot;</span>
        } <span class="keywordflow">while</span> ((503 === intval($result[<span class="stringliteral">&#39;http_code&#39;</span>])) &amp;&amp; ($retry &gt; 0));

        <span class="comment">// Close cURL object</span>
        @curl_close($con);

        <span class="comment">// Close file descriptor</span>
        @fclose($this-&gt;fd);

        <span class="comment">// Get filename from HTTP-header if $filename not set</span>
        $matches = array();
        preg_match(<span class="stringliteral">&#39;#.*Content-Disposition: *attachment; *filename=&quot;(?P&lt;filename&gt;[[:print:]]+)&quot;.*#s&#39;</span>, $this-&gt;header, $matches);

        <span class="comment">// Check if no filename is given AND filename is provided by HTTP-header</span>
        <span class="keywordflow">if</span> (empty($filename) &amp;&amp; !empty($matches[<span class="stringliteral">&#39;filename&#39;</span>])) {

            <span class="comment">// Rename file</span>
            $oldpath = $result[<span class="stringliteral">&#39;filepath&#39;</span>];
            $result[<span class="stringliteral">&#39;filepath&#39;</span>] = <a class="code" href="a00004.xhtml#a1b07c630eb02f770a082a013373a16d6">$directory</a> . <span class="charliteral">&#39;/&#39;</span> . $matches[<span class="stringliteral">&#39;filename&#39;</span>];
            <span class="keywordflow">if</span> (!@rename($oldpath, $result[<span class="stringliteral">&#39;filepath&#39;</span>])) {
                <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Renaming file &#39;</span> . $oldpath . <span class="stringliteral">&#39; to &#39;</span> . $result[<span class="stringliteral">&#39;filepath&#39;</span>] . <span class="stringliteral">&#39; failed!&#39;</span>);
                <span class="keywordflow">return</span> FALSE;
            }
        }
        unset($matches);

        <span class="comment">// Set file attributes</span>
        <span class="keywordflow">if</span> (!@chmod($result[<span class="stringliteral">&#39;filepath&#39;</span>], $mode)) {
            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: Setting attributes for file &#39;</span> . $result[<span class="stringliteral">&#39;filepath&#39;</span>] . <span class="stringliteral">&#39; failed!&#39;</span>);
            <span class="keywordflow">return</span> FALSE;
        }

        <span class="comment">// Return transfer information</span>
        <span class="keywordflow">return</span> $result;
    }
</pre></div>
</div>
</div>
<a class="anchor" id="a54e318f5d04c91b8fea9573f8f9cd1c0"></a><!-- doxytag: member="CURL::getHeader" ref="a54e318f5d04c91b8fea9573f8f9cd1c0" args="($con, $header)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00001.xhtml#a54e318f5d04c91b8fea9573f8f9cd1c0">CURL::getHeader</a> </td>
          <td>(</td>
          <td class="paramtype">$&#160;</td>
          <td class="paramname"><em>con</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">$&#160;</td>
          <td class="paramname"><em>header</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Callback function to get HTTP-header information.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramtype">resource</td><td class="paramname">$con</td><td>cURL connection resource. </td></tr>
    <tr><td class="paramtype">string</td><td class="paramname">$header</td><td>String with header line. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>integer Length of header in byte. </dd></dl>
<dl class="pre"><dt><b>Precondition:</b></dt><dd>None. </dd></dl>
<dl class="post"><dt><b>Postcondition:</b></dt><dd>None. </dd></dl>

<p>Definition at line <a class="el" href="a00003_source.xhtml#l00055">55</a> of file <a class="el" href="a00003_source.xhtml">CURL.php</a>.</p>

<p>References <a class="el" href="a00003_source.xhtml#l00029">$header</a>.</p>
<div class="fragment"><pre class="fragment">                                              {

        <span class="comment">// Check if content length does not exceed maximum size for integer</span>
        $content_length = preg_replace(<span class="stringliteral">&#39;/.*Content-Length: *(\d+).*/s&#39;</span>, <span class="stringliteral">&#39;$1&#39;</span>, $this-&gt;header);
        <span class="keywordflow">if</span>($content_length &gt; PHP_INT_MAX) {
            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(get_class() . <span class="stringliteral">&#39;::&#39;</span> . __FUNCTION__ . <span class="stringliteral">&#39;: &#39;</span>.$content_length.<span class="stringliteral">&#39; bytes content-length is too big for &#39;</span>.(PHP_INT_SIZE*8).<span class="stringliteral">&#39; bit-PHP !!!&#39;</span>);
        }
        unset($content_length);

        <span class="comment">// Add header line to object variable</span>
        $this-&gt;header .= <a class="code" href="a00001.xhtml#a9e29f76fc3f1b384198ab34b4fa69380">$header</a>;

        <span class="comment">// !!! Necessary for cURL to work !!!</span>
        <span class="keywordflow">return</span> mb_strlen(<a class="code" href="a00001.xhtml#a9e29f76fc3f1b384198ab34b4fa69380">$header</a>);
    }
</pre></div>
</div>
</div>
<hr/><h2>Field Documentation</h2>
<a class="anchor" id="a6f0c8690fd697c350611e459166f910f"></a><!-- doxytag: member="CURL::$fd" ref="a6f0c8690fd697c350611e459166f910f" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Filedescriptor CURL::$fd = null<code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>File descriptor for writing to file. </p>

<p>Definition at line <a class="el" href="a00003_source.xhtml#l00035">35</a> of file <a class="el" href="a00003_source.xhtml">CURL.php</a>.</p>

</div>
</div>
<a class="anchor" id="a9e29f76fc3f1b384198ab34b4fa69380"></a><!-- doxytag: member="CURL::$header" ref="a9e29f76fc3f1b384198ab34b4fa69380" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">string CURL::$header = ''<code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Information from HTTP-header. </p>

<p>Definition at line <a class="el" href="a00003_source.xhtml#l00029">29</a> of file <a class="el" href="a00003_source.xhtml">CURL.php</a>.</p>

<p>Referenced by <a class="el" href="a00003_source.xhtml#l00055">getHeader()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="a00003_source.xhtml">CURL.php</a></li>
</ul>
</div><!-- contents -->
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="a00001.xhtml">CURL</a>      </li>

    <li class="footer">Generated on Thu Jun 28 2012 22:04:15 for HLTVDLM by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
